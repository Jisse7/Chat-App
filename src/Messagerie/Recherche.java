/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Messagerie;

import BDD.Bdd;
import java.awt.Component;
import java.awt.Window;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;

/**
 *
 * @author User
 */
public class Recherche extends javax.swing.JFrame {

    
    
    static String email;
    
    private String prenomContact;
    private String nomContact;
     
    /**
     * Creates new form Recherche
     */
    public Recherche(String mail) {
        email = mail;

        initComponents();

        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        boutonAjouter.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        barreRecherche = new javax.swing.JTextField();
        boutonAjouter = new javax.swing.JButton();
        boutonRecherche = new javax.swing.JButton();
        boutonFermer = new javax.swing.JButton();
        resultat = new javax.swing.JLabel();
        logErreurRecherche = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Ajouter");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Entrez une adresse mail :");

        barreRecherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barreRechercheActionPerformed(evt);
            }
        });

        boutonAjouter.setBackground(new java.awt.Color(204, 255, 204));
        boutonAjouter.setText("AJOUTER");
        boutonAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonAjouterActionPerformed(evt);
            }
        });

        boutonRecherche.setBackground(new java.awt.Color(204, 204, 255));
        boutonRecherche.setText("Recherche");
        boutonRecherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonRechercheActionPerformed(evt);
            }
        });

        boutonFermer.setBackground(new java.awt.Color(255, 204, 204));
        boutonFermer.setText("FERMER");
        boutonFermer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonFermerActionPerformed(evt);
            }
        });

        resultat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        logErreurRecherche.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(boutonAjouter, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(boutonFermer, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(logErreurRecherche, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(resultat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(barreRecherche, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(boutonRecherche, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(barreRecherche, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boutonRecherche, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(resultat, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boutonAjouter, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boutonFermer, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logErreurRecherche, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void boutonRechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonRechercheActionPerformed
                                            
    // Récupérer l'email saisi dans la barre de recherche
    String emailRecherche = barreRecherche.getText().trim();
    
    // Vérifier si l'email de recherche n'est pas vide
    if (!emailRecherche.isEmpty()) {
        try {
            // Obtenir le nom complet de l'utilisateur correspondant à l'email de recherche
            Bdd bdd = Bdd.getInstance();
            String nomCompletUtilisateur = bdd.getUtilisateurParEmail(emailRecherche);
            
            // Vérifier si un utilisateur correspondant a été trouvé
            if (nomCompletUtilisateur != null && !nomCompletUtilisateur.isEmpty() && !bdd.estDejaContact(email,barreRecherche.getText())) {
                // Afficher le nom complet de l'utilisateur dans le champ de résultat
                resultat.setText(nomCompletUtilisateur);
                // Rendre le bouton Ajouter visible
                boutonAjouter.setVisible(true);
            } else {
                // Si aucun utilisateur correspondant n'est trouvé, afficher un message d'erreur
                if(bdd.estDejaContact(email,barreRecherche.getText())){
                    resultat.setText("Vous avez déjà ce contact !");
                }
                
                else{
                resultat.setText("Aucun utilisateur trouvé avec cet e-mail : " + emailRecherche);
                // Rendre le bouton Ajouter invisible
                boutonAjouter.setVisible(false);}
            }
        } catch (Exception e) {
            // En cas d'erreur, afficher un message d'erreur dans le champ de résultat
            resultat.setText("Erreur lors de la recherche : " + e.getMessage());
            // Rendre le bouton Ajouter invisible
            boutonAjouter.setVisible(false);
        }
    } else {
        // Si l'email de recherche est vide, afficher un message d'erreur dans le champ de résultat
        resultat.setText("Veuillez saisir un e-mail à rechercher.");
        // Rendre le bouton Ajouter invisible
        boutonAjouter.setVisible(false);
    }


    }//GEN-LAST:event_boutonRechercheActionPerformed

    
   public String setPrenomContact(String nomComplet) {
        String[] prenomNom = nomComplet.split(" ");
        if (prenomNom.length > 0) {
            prenomContact = prenomNom[0];
        } else {
            prenomContact = "";
        }
        return prenomContact;
    }

    public String setNomContact(String nomComplet) {
        String[] prenomNom = nomComplet.split(" ");
        if (prenomNom.length > 1) {
            nomContact = prenomNom[1];
            for (int i = 2; i < prenomNom.length; i++) {
                nomContact += " " + prenomNom[i];
            }
        } else {
            nomContact = "";
        }
        return nomContact;
    }

    public String getPrenomContact(String nomComplet) {
        return setPrenomContact(nomComplet);
    }

    public String getNomContact(String nomComplet) {
        return setNomContact(nomComplet);
    }
    
    
    private void boutonAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonAjouterActionPerformed
    // TODO add your handling code here:
    Bdd bdd = new Bdd();
    String nomComplet = resultat.getText();
    String prenomContact = getPrenomContact(nomComplet);
    String nomContact = getNomContact(nomComplet);
    
 
    
    // Ajouter le contact
    bdd.addContact(email, prenomContact, nomContact);
    System.out.println(prenomContact + " " + nomContact + " ajouté !");
    
    // Créer une nouvelle conversation avec ce contact
    int idUtilisateurCourant = 0;
        try {
            idUtilisateurCourant = bdd.getIdUtilisateurParEmail(email);
        } catch (SQLException ex) {
            Logger.getLogger(Recherche.class.getName()).log(Level.SEVERE, null, ex);
        }
    int idUtilisateurContact = bdd.getIDUtilisateurParPrenomNom(prenomContact, nomContact);
    if (idUtilisateurCourant != -1 && idUtilisateurContact != -1) {
        bdd.creerNouvelleConversation(idUtilisateurCourant, idUtilisateurContact);
    
    this.dispose();
        
    } else {
        System.err.println("Impossible de créer la conversation. Vérifiez les identifiants des utilisateurs.");
        logErreurRecherche.setText("Impossible de créer la conversation. Vérifiez les identifiants des utilisateurs");
    }
    }//GEN-LAST:event_boutonAjouterActionPerformed

    private void boutonFermerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonFermerActionPerformed
        // TODO add your handling code here:
         Window parentWindow = SwingUtilities.windowForComponent((Component) evt.getSource());
    
    // Vérifiez si la fenêtre parente est une instance de JFrame
    if (parentWindow instanceof JFrame) {
        // Fermez la fenêtre parente (la fenêtre courante)
        parentWindow.dispose();
    }
    
    //Cette méthode récupère la fenêtre parente à partir de l'événement d'action, vérifie si elle est une instance de JFrame 
    //(ce qui est courant pour les fenêtres principales dans les applications Swing), puis ferme cette fenêtre avec la méthode dispose(), 
    //ce qui libère les ressources associées à la fenêtre et la supprime de l'affichage sans fermer l'ensemble de l'application.
    }//GEN-LAST:event_boutonFermerActionPerformed

    private void barreRechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barreRechercheActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_barreRechercheActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Recherche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Recherche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Recherche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Recherche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Recherche(email).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField barreRecherche;
    private javax.swing.JButton boutonAjouter;
    private javax.swing.JButton boutonFermer;
    private javax.swing.JButton boutonRecherche;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel logErreurRecherche;
    private javax.swing.JLabel resultat;
    // End of variables declaration//GEN-END:variables
}
